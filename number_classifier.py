# -*- coding: utf-8 -*-
"""Number Classifier.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/18Sddv5YoTAPMNbYePaYdHb9XDFyQAVbk
"""

import tensorflow as tf
import numpy as np

(xtrain, ytrain), (xtest, ytest) = tf.keras.datasets.mnist.load_data()
xtrain = xtrain.reshape(xtrain.shape[0], 28,28,1)
xtest = xtest.reshape(xtest.shape[0], 28,28,1)
xtrain =  xtrain.astype('float32')
xtest =  xtest.astype('float32')
xtrain /= 255
xtest /= 255
ytrain = tf.keras.utils.to_categorical(ytrain, 10)
ytest = tf.keras.utils.to_categorical(ytest, 10)

model = tf.keras.Sequential()

model.add(tf.keras.layers.Conv2D(filters=6, kernel_size=5, strides=1, padding='valid', activation='relu', input_shape=[28,28,1]))
model.add(tf.keras.layers.Conv2D(filters=6, kernel_size=5, strides=1, padding='valid', activation='relu', input_shape=[28,28,1]))
#24*24*6
model.add(tf.keras.layers.MaxPool2D(pool_size =2, strides = 2))
#12*12*6
model.add(tf.keras.layers.Conv2D(filters=16, kernel_size=5, strides=1, padding='valid', activation='relu'))
model.add(tf.keras.layers.Conv2D(filters=16, kernel_size=5, strides=1, padding='valid', activation='relu'))
#8*8*16
model.add(tf.keras.layers.MaxPool2D(pool_size=2, strides=2))
#4*4*16

model.add(tf.keras.layers.Flatten())
model.add(tf.keras.layers.Dense(120, activation='relu'))
model.add(tf.keras.layers.Dense(84, activation='relu'))
model.add(tf.keras.layers.Dense(10, activation='softmax'))

model.compile(optimizer='adam', loss='categorical_crossentropy', metrics=['accuracy'])

model.fit(xtrain, ytrain, batch_size=100, epochs=50, validation_data=(xtest, ytest))

model.summary()